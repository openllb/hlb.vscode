fs npm() {
	image "alpine"
	run "apk add --update npm"
}

fs vsce() {
	npm
	run "npm install -g vsce"
}

fs npmInstall(fs src) {
	npm
	run "npm install" with option {
		dir "/src"
		mount src "/src" with option {
			readonly
		}
		mount scratch "/src/node_modules" as nodeModules
	}
}

fs packageBuilder(fs src) {
	vsce
	run "vsce package -o /package" with option {
		dir "/src"
		mount src "/src" with option {
			readonly
		}
		mount fs { nodeModules src; } "/src/node_modules"
		mount scratch "/src/out"
		mount scratch "/package" as package
	}
}

fs publish(fs src) {
	vsce
	run "vsce publish --packagePath /package/* -p $(cat /.token)" with option {
		dir "/src"
		mount src "/src" with option {
			readonly
		}
		mount fs { nodeModules src; } "/src/node_modules"
		mount fs { package src; } "/package"
		secret ".token" "/.token"
	}
}

fs generateLock() {
	npm
	run "npm install" with option {
		dir "/src"
		mount fs {
			local "." with option {
				includePatterns "package.json"
			}
		} "/src" as lockOutput
		mount scratch "/src/node_modules"
	}
}

fs source() {	
	git "https://github.com/openllb/hlb.vscode.git" "master" with option {
		keepGitDir
	}
	mkdir "syntaxes" 0o755
	copy fs {
		git "https://github.com/openllb/hlb.git" "master"
	} "/language/hlb.tmbundle/Syntaxes/hlb.tmLanguage" "syntaxes/."
	mkdir "node_modules" 0o755
	mkdir "out" 0o755
}

fs localSource() {
	local "." with option {
		includePatterns "LICENSE" "*.json" "src"
	}
	mkdir "syntaxes" 0o755
	copy fs {
		local "/Users/cbennett/gosrc/hlb/src/github.com/openllb/hlb/language/hlb.tmbundle/Syntaxes" with option {
			includePatterns "*.tmLanguage"
		}
	} "." "syntaxes/."
	mkdir "node_modules" 0o755
	mkdir "out" 0o755
}

fs updateLock() {
	lockOutput
	download "."
}


fs devPackage() {
	package localSource
	download "."
}

fs default() {
	publish source
}